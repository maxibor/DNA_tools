#!/usr/bin/env python

from Bio import SeqIO
import sys
from numpy import median
import plotille
# import matplotlib as mpl ##These two lines are needed
# mpl.use('Agg') # to plot without a X server running.
# import matplotlib.pyplot as plt
from collections import Counter

# Author : Maxime Borry
# Contact : maxime.borry@gmail.com
# Usage : faStats file.fa
# Summary : Computes sequences length statistics of a fasta file


def maxprint(elem, maxcount):
    return(int(elem / maxcount * 80))


def getmax(thecounter):
    themax = 0
    for elem in sorted(list(set(thecounter.elements()))):
        if thecounter[elem] > themax:
            themax = thecounter[elem]
    return(themax)


seq_length = []
filename = sys.argv[1]
filename_short = filename.split(".")[0]
print("Loading fasta file...")
for seq_record in SeqIO.parse(filename, "fasta"):
    seq_length.append(len(seq_record.seq))
cnt = Counter(seq_length)
themax = getmax(cnt)
print("- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -")
print(filename + " fasta file statistics : ")
print("* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *")
print("Number of sequences: " + str(len(seq_length)))
print("Average sequence length : " + str(round(sum(seq_length) / len(seq_length),2)))
print("Median sequence length :", str(median(seq_length)))
print("Max sequence length : " + str(max(seq_length)))
print("Min sequence length : " + str(min(seq_length)))
bins = min(30, int(len(seq_length)/5))
print(plotille.hist(seq_length, width=60, bins=bins))