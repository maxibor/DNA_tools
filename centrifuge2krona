#!/usr/bin/env python

import argparse
import os

def get_args():
    '''This function parses and return arguments passed in'''
    parser = argparse.ArgumentParser(
    prog='CentrifugeToKrona',
    description='Centrifuge output to krona visualisation. Necessitate Centrifuge version >= 1.0.4')
    parser.add_argument('infile', help="path to centrifuge output file")
    parser.add_argument(
    '-index',
    default="./nt",
    help="Centrifuge index. Default = ./nt")
    parser.add_argument(
    '-tax',
    default=None,
    help="Krona taxonomy directory. Krona's default")

    parser.add_argument(
    '-lca',
    default=True,
    help="Compute LCA when multiple matches for one db seq (True | False). Default = True")
    parser.add_argument(
    '-minlen',
    default=30,
    help="Minimum alignment length to keep read. Default = 30")
    parser.add_argument(
    '-minscore',
    default=256,
    help="Minimum centrifuge score to keep read. Default = 256")
    parser.add_argument(
    '-outpath',
    default="./",
    help="Output directory. Default = ./")

    args = parser.parse_args()

    infile = args.infile
    index = args.index
    lca = args.lca
    taxo = args.tax
    minlen = str(args.minlen)
    minscore = str(args.minscore)
    outpath = args.outpath


    return(infile, index, taxo, lca, minlen, minscore, outpath)

def get_basename(file_name):
    if ("/") in file_name:
        basename = file_name.split("/")[-1].split(".")[0]
    else:
        basename = file_name.split(".")[0]
    return(basename)


if __name__ == "__main__":
    infile, index, taxo, lca, minlen, minscore, outpath = get_args()

    basename = get_basename(infile)
    if lca == True:
        cmd = "centrifuge-kreport -x "+index+" --min-score "+minscore+" --min-length "+minlen+" "+infile+ " > "+basename+"_centriKraken_onlyUnique_minScore_"+minscore+"_minLength_"+minlen+".out"
        print(cmd)
        os.system(cmd)
        if not taxo:
            cmd = "ktImportTaxonomy -q 2 -t 5 -o "+basename+"_krona.html "+outpath+"/"+basename+"_centriKraken_onlyUnique_minScore_"+minscore+"_minLength_"+minlen+".out"
            print(cmd)
            os.system(cmd)
        else:
            cmd = "ktImportTaxonomy -q 2 -t 5 -tax "+taxo+" -o "+basename+"_krona.html "+outpath+"/"+basename+"_centriKraken_onlyUnique_minScore_"+minscore+"_minLength_"+minlen+".out"
            print(cmd)
            os.system(cmd)
    else:
        cmd = "centrifuge-kreport -x "+index+" --no-lca --min-score "+minscore+" --min-length "+minlen+" "+infile+" > "+basename+"_centriKraken_minScore_"+minscore+"_minLength_"+minlen+".out"
        print(cmd)
        os.system(cmd)
        if not taxo:
            cmd = "ktImportTaxonomy -q 2 -t 5 -o "+basename+"_krona.html "+outpath+"/"+basename+"_centriKraken_onlyUnique_minScore_"+minscore+"_minLength_"+minlen+".out"
            print(cmd)
            os.system(cmd)
        else:
            cmd = "ktImportTaxonomy -q 2 -t 5 -tax "+taxo+" -o "+basename+"_krona.html "+outpath+"/"+basename+"_centriKraken_onlyUnique_minScore_"+minscore+"_minLength_"+minlen+".out"
            print(cmd)
            os.system(cmd)
