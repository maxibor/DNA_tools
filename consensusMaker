#!/usr/bin/env python

import random
import argparse


def get_args():
    '''This function parses and return arguments passed in'''
    parser = argparse.ArgumentParser(
        prog='consensusMaker',
        description='''
        Generate consensus sequence in fasta format from
        a samtools mpileup input file.
        '''
    )
    parser.add_argument('infile', help="path to mpileup input file")
    parser.add_argument(
        '-o',
        dest="outfile",
        default="consensus.fa",
        help="Output directory. Default = ./")

    args = parser.parse_args()

    infile = args.infile
    outfile = args.outfile

    return(infile, outfile)


if __name__ == "__main__":
    INFILE, OUTFILE = get_args()

    myfile = open(INFILE, 'r')

    mycount = ["None"] * 4
    mycons = [""]

    mybases = ["A", "C", "G", "T"]

    for line in myfile:
        linsplit = line.split()
        A = linsplit[4].count('A') + linsplit[4].count('a')
        C = linsplit[4].count('C') + linsplit[4].count('c')
        G = linsplit[4].count('G') + linsplit[4].count('g')
        T = linsplit[4].count('T') + linsplit[4].count('t')
        mycount[0] = A
        mycount[1] = C
        mycount[2] = G
        mycount[3] = T
        themax = max(mycount)
        max_index = [i for i, j in enumerate(mycount) if j == themax]
        if len(max_index) > 1:
            the_index = random.choice(max_index)
        mycons.append(mybases[the_index])

    consensus = "".join(mycons)

    file = open(OUTFILE, "w")
    file.write(">consensus \n")
    file.write(consensus)
    file.close()
